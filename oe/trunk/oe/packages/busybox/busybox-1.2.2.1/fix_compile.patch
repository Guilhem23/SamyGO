diff -ur old/Makefile new/Makefile
--- old/Makefile	2006-07-29 00:53:44.000000000 +0200
+++ new/Makefile	2010-01-11 15:46:07.000000000 +0100
@@ -440,7 +440,7 @@
 USAGE_BIN:=scripts/usage
 $(USAGE_BIN): $(top_srcdir)/scripts/usage.c .config \
 		$(top_srcdir)/include/usage.h
-	$(do_link.h)
+	$(CC) $(CFLAGS) $(INCS) $< -o $@
 
 DEP_INCLUDES += include/usage_compressed.h
 
diff -ur old/Rules.mak new/Rules.mak
--- old/Rules.mak	2006-10-24 22:22:03.000000000 +0200
+++ new/Rules.mak	2010-01-11 20:39:49.000000000 +0100
@@ -65,72 +65,10 @@
 
 #--------------------------------------------------------
 export VERSION BUILDTIME HOSTCC HOSTCFLAGS CROSS CC AR AS LD NM STRIP CPP
-ifeq ($(strip $(TARGET_ARCH)),)
-TARGET_ARCH:=$(shell $(CC) -dumpmachine | $(SED) -e s'/-.*//' \
-		-e 's/i.86/i386/' \
-		-e 's/sparc.*/sparc/' \
-		-e 's/arm.*/arm/g' \
-		-e 's/m68k.*/m68k/' \
-		-e 's/ppc/powerpc/g' \
-		-e 's/v850.*/v850/g' \
-		-e 's/sh[234]/sh/' \
-		-e 's/mips-.*/mips/' \
-		-e 's/mipsel-.*/mipsel/' \
-		-e 's/cris.*/cris/' \
-		)
-endif
-
-# A nifty macro to make testing gcc features easier, but note that everything
-# that uses this _must_ use := or it will be re-evaluated everytime it is
-# referenced.
-ifeq ($(strip $(BUILD_VERBOSE)),2)
-VERBOSE_CHECK_CC=echo CC=\"$(1)\" check_cc $(2) >&2;
-endif
-check_cc=$(shell \
-	$(VERBOSE_CHECK_CC) \
-	if [ "x$(1)" != "x" ] && [ "x$(2)" != "x" ]; then \
-		echo "int i;" > ./conftest.c; \
-		if $(1) $(2) -c -o conftest.o conftest.c > /dev/null 2>&1; \
-		then echo "$(2)"; else echo "$(3)"; fi ; \
-		rm -f conftest.c conftest.o; \
-	fi)
 
-ifneq ($(filter $(nocheck_targets),$(MAKECMDGOALS)),)
 check_cc:=
-endif
-
-# A not very robust macro to check for available ld flags
-ifeq ($(strip $(BUILD_VERBOSE)),2)
-VERBOSE_CHECK_LD=echo LD=\"$(1)\" check_ld $(2) >&2;
-endif
-check_ld=$(shell \
-	$(VERBOSE_CHECK_LD) \
-	if [ "x$(1)" != "x" ] && [ "x$(2)" != "x" ]; then \
-		$(1) -o /dev/null -b binary /dev/null > /dev/null 2>&1 && \
-		echo "-Wl,$(2)" ; \
-	fi)
-
-ifneq ($(filter $(nocheck_targets),$(MAKECMDGOALS)),)
 check_ld:=
-endif
-
-# A not very robust macro to check for available strip flags
-ifeq ($(strip $(BUILD_VERBOSE)),2)
-VERBOSE_CHECK_STRIP=echo STRIPCMD=\"$(1)\" check_strip $(2) >&2;
-endif
-check_strip=$(shell \
-	$(VERBOSE_CHECK_STRIP) \
-	if [ "x$(1)" != "x" ] && [ "x$(2)" != "x" ]; then \
-		echo "int i;" > ./conftest.c ; \
-		$(CC) -c -o conftest.o conftest.c > /dev/null 2>&1 ; \
-		$(1) $(2) conftest.o > /dev/null 2>&1 && \
-		echo "$(1) $(2)" || echo "$(3)"; \
-		rm -f conftest.c conftest.o > /dev/null 2>&1 ; \
-	fi)
-
-ifneq ($(filter $(nocheck_targets),$(MAKECMDGOALS)),)
 check_strip:=
-endif
 
 
 # Select the compiler needed to build binaries for your development system
@@ -282,7 +220,7 @@
     CHECKED_CFLAGS+=$(call check_cc,$(CC),-Wshadow,)
     CHECKED_CFLAGS+=$(call check_cc,$(CC),-Wcast-align,)
 endif
-STRIPCMD:=$(call check_strip,$(STRIP),-s --remove-section=.note --remove-section=.comment,$(STRIP))
+STRIPCMD:=$(STRIP) -s --remove-section=.note --remove-section=.comment
 ifeq ($(strip $(CONFIG_STATIC)),y)
     PROG_CFLAGS += $(call check_cc,$(CC),-static,)
 endif
@@ -360,7 +298,7 @@
 
 show_objs = $(subst $(top_builddir)/,,$(subst ../,,$@))
 pur_disp_compile.c = echo "  "CC $(show_objs)
-pur_disp_compile.h = echo "  "HOSTCC $(show_objs)
+pur_disp_compile.h = echo "  "CC $(show_objs)
 pur_disp_strip     = echo "  "STRIP $(show_objs)
 pur_disp_link      = echo "  "LINK $(show_objs)
 pur_disp_link.h    = echo "  "HOSTLINK $(show_objs)
@@ -390,7 +328,7 @@
 disp_doc           = $(SECHO) "  "DOC $(subst docs/,,$@) ; true
 disp_elf2flt       = $($(DISP)_disp_elf2flt)
 cmd_compile.c      = $(CC) $(CFLAGS) $(EXTRA_CFLAGS) -c -o $@ $<
-cmd_compile.h      = $(HOSTCC) $(HOSTCFLAGS) $(INCS) -c -o $@ $<
+cmd_compile.h      = $(CC) $(CFLAGS) $(INCS) -c -o $@ $<
 cmd_strip          = $(STRIPCMD) $@
 cmd_link           = $(CC) $(CFLAGS) $(EXTRA_CFLAGS) $(LDFLAGS) \
 			$(PROG_CFLAGS) $(PROG_LDFLAGS) $(CFLAGS_COMBINE) \
diff -ur old/scripts/config/Makefile new/scripts/config/Makefile
--- old/scripts/config/Makefile	2006-07-01 00:42:01.000000000 +0200
+++ new/scripts/config/Makefile	2010-01-11 15:28:05.000000000 +0100
@@ -58,11 +58,11 @@
 	$(Q)$(HOSTCC) $(NATIVE_LDFLAGS) $^ -o $@ $(LIBS)
 
 $(CONF_OBJS): %.o : $(srcdir)/%.c $(SHARED_DEPS)
-	$(compile.h) -I.
+	$(HOSTCC) $(HOSTCFLAGS) $(INCS) -I. -c -o $@ $<
 
 $(MCONF_OBJS): %.o : $(srcdir)/%.c $(SHARED_DEPS)
 	@[ -d $(@D) ] || mkdir $(@D)
-	$(compile.h) $(HOSTNCURSES) -I.
+	$(HOSTCC) $(HOSTCFLAGS) $(INCS) $(HOSTNCURSES) -I. -c -o $@ $<
 
 lkc_defs.h: $(srcdir)/lkc_proto.h
 	@$(SED) < $< > $@ 's/P(\([^,]*\),.*/#define \1 (\*\1_p)/'
@@ -83,7 +83,7 @@
 else
 
 lex.zconf.o: lex.zconf.c $(SHARED_DEPS)
-	$(compile.h) -I$(srcdir)
+	$(HOSTCC) $(HOSTCFLAGS) $(INCS) -I$(srcdir) -c -o $@ $<
 
 lex.zconf.c: $(srcdir)/lex.zconf.c_shipped
 	$(Q)cp $< $@
@@ -97,7 +97,7 @@
 
 zconf.tab.o: zconf.tab.c lex.zconf.c $(srcdir)/confdata.c $(srcdir)/expr.c \
              $(srcdir)/symbol.c $(srcdir)/menu.c $(SHARED_DEPS)
-	$(compile.h) -I$(srcdir) -I.
+	$(HOSTCC) $(HOSTCFLAGS) $(INCS) -I$(srcdir) -I. -c -o $@ $<
 
 .PHONY: ncurses
 
diff -ur old/scripts/usage_compressed new/scripts/usage_compressed
--- old/scripts/usage_compressed	2006-07-01 00:42:02.000000000 +0200
+++ new/scripts/usage_compressed	2010-01-09 19:09:48.000000000 +0100
@@ -7,7 +7,7 @@
 
 echo 'static const char packed_usage[] = '
 "$loc"/usage | bzip2 -1 | od -v -t x1 \
-| $SED -e 's/^[^ ]*//' -e 's/ \(..\)/\\x\1/g' -e 's/^\(.*\)$/"\1"/' || exit 1
+| $SED -e 's/^[^ ]*//' -e 's/ +\(..\)/\\x\1/g' -e 's/^\(.*\)$/"\1"/' || exit 1
 echo ';'
 sz=`"$loc"/usage | wc -c` || exit 1
 echo '#define SIZEOF_usage_messages' `expr 0 + $sz`
