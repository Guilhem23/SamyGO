#!/usr/bin/make -f

# target platform: Chelsea 
MACHINE = T-CHU7DEUC
# MACHINE = T-SPHAUSC
DISTRO = samygo

PWD := $(shell /bin/pwd)

OE_BASE = $(PWD)

DL_DIR ?= $(OE_BASE)/sources

all: initialize
	@echo 
	@echo "SamyGO Openembedded for Samsung (SELP/SamyGO $(MACHINE)) environment has"
	@echo "been initialized properly. Now you can either:"
	@echo
	@echo "  - go into $(OE_BASE)/build/, source env.source"
	@echo "  - for nfs boot rootfs do: bitbake $(MACHINE)-nfsboot-image"
	@echo

.PHONY: all

devshell: initialize 
	cd $(OE_BASE)/build; . ./env.source; bitbake devshell

initialize: $(OE_BASE)/cache sources $(OE_BASE)/build $(OE_BASE)/build/conf \
	$(OE_BASE)/build/tmp $(OE_BASE)/build/conf/local.conf \
	$(OE_BASE)/build/env.source

$(OE_BASE)/build $(OE_BASE)/build/conf $(OE_BASE)/build/tmp $(OE_BASE)/cache: sources
	mkdir -p $@

sources: 
	mkdir -p $(DL_DIR)

graph: $(OE_BASE)/bb
	cd $(OE_BASE)/build; . ./env.source; bitbake -g $(MACHINE)-image
	dot -Tpng -o $(MACHINE)-dep.png build/alldepends.dot

$(OE_BASE)/build/conf/local.conf: 
	echo 'DL_DIR = "$(DL_DIR)"' > $@
	echo 'OE_BASE = "$(OE_BASE)"' >> $@
	echo 'BBFILES = "$${OE_BASE}/oe/packages/*/*.bb"' >> $@
	echo 'BBMASK = ""' >> $@
	echo 'MACHINE = "$(MACHINE)"' >> $@
	echo 'TARGET_OS = "linux-gnueabi"' >> $@
	echo 'DISTRO = "$(DISTRO)"' >> $@
	echo 'CACHE = "$(OE_BASE)/cache/oe-cache.$${USER}"' >> $@
	echo 'ASSUME_PROVIDED += " gmp-native mpfr-native "' >> $@
	echo 'ASSUME_PROVIDED += " gettext-native "' >> $@
#	echo 'PARALLEL_MAKE = "-j 3"' >> $@

$(OE_BASE)/build/env.source:
	echo 'OE_BASE="$(OE_BASE)"' > $@
	echo 'export BBPATH="$${OE_BASE}/oe/:$${OE_BASE}/bb/:$${OE_BASE}/build/"' >> $@
	echo 'PATH=$${PATH}:$${OE_BASE}/bb/bin:$${OE_BASE}/build/tmp/cross/bin' >> $@
	echo 'export PATH' >> $@
	echo 'export LD_LIBRARY_PATH=' >> $@
	echo 'export LANG=C' >> $@
	cat $@


