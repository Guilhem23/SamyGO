<?php
# main SmartHub, don't touch it....
require_once('SimpleMidleMan.inc');
include_once('WidgetHelper.inc');

if(isset($QParts['category']) === FALSE){
#        $xml = uniq__xml($xml);
#        // $xml = transform_to_xml($xml);
	CError::LogStr("- TODO - xml make uniq?");
}


# b-series:
#  - START -/openapi/service/widget/gallery?category=Manager
# sample how to change version to 1.067, but need check if device is b-series
if(strstr($_SERVER['HTTP_TOKEN'], "XX")){
	if($QParts['category'] == "Manager" || $WhoAmI == "400009002"){
		$respxml->list->widget['version'] = '1.067'; /* ignore date and size, don't care */
	}
# and on dl-location request: /openapi/service/widget/400009002 
# on dec. 2012 some new attributes added by samsung, don't care
	if($WhoAmI == "400009002"){
		$respxml->list->widget['url'] = 'http://d2s7bi153972zt.cloudfront.net/selif/widget/201106/400009002/1.067/widget/WidgetMgr-1.067.all.110622.zip';
	}
# in case we use our own xml file: 
#if($QParts['category'] == "Manager" || $WhoAmI == "400009002"){
#	$respxml = new SimpleXMLElement($xmlstr); 
#}
	SendPage($respxml->asXML());
}

# c-series:
#

# d-series:
#

# e-series:
#

if($WhoAmI == "list"){
	CError::LogStr("e-series in $WhoAmI, need manipulation/merge?");
# DONE: merge in users allready installed widgets...
#	$respxml->keepNodesByAttrib("widget", "id", $KeepOriginalApps);
#	$respxml->list->Merge($gUserData);
# dom is nice, in one command...
#	$respxml->keepNodesByAttrib("widget", "id", $KeepOriginalApps)->list->Merge($gUserData);
# or over the top and make it uniq 
#	$respxml->keepNodesByAttrib("widget", "id", $KeepOriginalApps)->list->Merge($UserWList, true)->removeDups();
#	$respxml->keepNodesByAttrib("widget", "id", $KeepOriginalApps)->list->Merge($UserWList, true);
#	SendPage($respxml->asXML());
# hm, whats if we not remove anything, but just change forced...
#	$respxml->list->Merge($UserWList, true)->removeDups();
	CError::LogStr("e-series in $WhoAmI");
$respxml->keepNodesByAttrib("widget", "id", $KeepOriginalApps)->list->Merge($UserWList, true);
} elseif($WhoAmI == "gallery"){
	if($QParts['featured'] == "partners"){
		$respxml->keepNodesByAttrib("widget", "id", $KeepOriginalApps);
		CError::LogStr("e-series gallery on top in $WhoAmI");
		$CustList = ImportCustomWidgets($CustomApps);
		$respxml->list->Merge($CustList->list, true);
	} elseif($QParts['featured'] == "signature"){
# needs goupname key ? 
#       <groupname key="CameraApp"/>
#             <groupname key="Edutainment"/>
#                   <groupname key="Explore3D"/>
#                         <groupname key="FamilyStory"/>
#                               <groupname key="MediaHub"/>
#                                     <groupname key="SamsungApps"/>
#                                           <groupname key="TVComm"/>
#                                                 <groupname key="vTuner"/>
#                                                       <groupname key="YourHealth"/>
		$respxml->keepNodesByAttrib("widget", "id", $KeepOriginalApps);
		CError::LogStr("e-series gallery in middle bar in $WhoAmI");
		$CustList = ImportCustomWidgets($CustomApps);
		$respxml->list->Merge($CustList->list, true);
	} else {
		$respxml->list->keepNodesByAttrib("widget", "id", $KeepOriginalApps);
		CError::LogStr("e-series gallery on bottom $WhoAmI");
		$CustList = ImportCustomWidgets($CustomApps);
		$respxml->list->Merge($CustList->list, true);
	}
# CError::LogStr(print_r($respxml->list->widget, 1));
} elseif($WhoAmI == "samsungapps"){ /* ? list/samsungapps gallery/samsungapps ? */
	CError::LogStr(" c,d,e series in $WhoAmI");
} else {
	CError::LogStr("noting to do for e-series in $WhoAmI");
#	SendPage($respxml->asXML());
}

# f-series:
# ModelID 13_FOXP ?
#echo $doc->savexml();

# if we inject custom widgets, samsung server respond is:
# <rsp stat="fail"><err code="300" msg="Invalid Widget ID"/><desc/></rsp>
# check on both arrays $ReplaceOriginalApps $CustomApps then we need to pass the download url to client
# TODO: check for what model the version is requested...
if (in_array($WhoAmI, $CustomApps)){
	CError::LogStr("Send custom widget url for $WhoAmI");
	$file = $_SERVER['DOCUMENT_ROOT'] . "/CustomWidgets/" . $WhoAmI . ".dl";
    	$respxml = new mySXE(file_get_contents($file));
}

SendPage($respxml->asXML());
?>
